{"version":3,"sources":["redux/reducers/structure.js","redux/reducers/availableForms.js","redux/reducers/formValues.js","redux/store.js","components/Form/FormTitle.js","components/Form/FormLayout.js","components/Form/StarRating.js","components/Form/FormStructure.js","api/apiClient.js","components/Form/Form.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["initialState","structure","label","componentId","type","helpBlock","updateFlag","state","arguments","length","undefined","action","Object","objectSpread","forms","id","name","status","category","answerTracking","publicAnswers","currentForm","availableForms","formValues","starRating","defineProperty","updateField","updateValue","fieldName","rating","reducer","combineReducers","formStructure","createStore","StyledTitle","styled","h1","_templateObject","FormTitle","props","react_default","a","createElement","title","StyledLayout","Container","FormLayout_templateObject","FormLayout","children","StyledStar","FontAwesomeIcon","StarRating_templateObject","Layout","div","_templateObject2","StarRating","componentDidMount","_this","dispatch","handleStarClick","nextValue","prevValue","react_star_rating_component_default","this","starCount","value","onStarClick","bind","renderStarIcon","icon","emptyStarColor","React","Component","connect","StyledLabel","Form","Label","FormStructure_templateObject","labelDefaultSize","fieldDefaultSize","FormStructure","handleChange","e","target","console","log","createInputField","field","InputGroup","es_Form","Control","placeholder","onChange","Append","Text","react_fontawesome_index_es","Form_StarRating","createHelpBlock","className","createFormFields","onSubmit","handleSubmit","map","_React$createElement","Group","as","Row","controlId","key","column","xs","Col","request","require","sendAPIRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","apiPath","response","wrap","_context","prev","next","json","sent","abrupt","t0","stop","_x","apply","getDataFromColetum","_ref2","_callee2","query","_context2","URL","data","_x2","getAvailableForms","_ref3","_callee3","_context3","getFormStructure","_ref4","_callee4","formName","formId","_context4","concat","_x3","_x4","componentDidUpdate","updateStructure","form","form_structure","Form_FormLayout","Form_FormTitle","Form_FormStructure","StyledDropdown","NavDropdown","Header_templateObject","StyledNavbar","Navbar","Header_templateObject2","Header","getForms","handleSelection","filter","f","populateDropdown","onSelect","evt","Item","eventKey","variant","expand","Toggle","aria-controls","Collapse","Nav","library","add","faCalendarAlt","faStar","GlobalStyle","createGlobalStyle","App_templateObject","App","es","store","components_Header","components_Form_Form","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","process","href","origin","addEventListener","fetch","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a2d61e4f.chunk.js","sourcesContent":["const initialState = {\r\n  structure: [{\r\n    label: 'nome',\r\n    componentId: 'nome0',\r\n    type: 'textfield',\r\n    helpBlock: null\r\n  }],\r\n  updateFlag: true,\r\n}\r\n\r\nconst structure = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE':\r\n      return {\r\n        ...state,\r\n        structure: action.structure\r\n      };\r\n    case 'SET_UPDATE_FLAG':\r\n      return {\r\n        ...state,\r\n        updateFlag: action.updateFlag\r\n      }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default structure;","const initialState = {\r\n  forms: [{\r\n    id: '6950',\r\n    name: 'Cadastro de Pokémon',\r\n    status: 'enabled',\r\n    category: 'Desafio front-end',\r\n    answerTracking: true,\r\n    publicAnswers: false\r\n  }],\r\n  currentForm: {\r\n    id: 6950,\r\n    name: 'Cadastro de Pokémon',\r\n  }\r\n}\r\n\r\nconst availableForms = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_FORMS':\r\n      return {\r\n        ...state,\r\n        forms: action.forms,\r\n      };\r\n    case 'SET_CURRENT_FORM':\r\n      return {\r\n        ...state,\r\n        currentForm: action.currentForm,\r\n      }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default availableForms;","const initialState = {\r\n  formValues: {},\r\n  starRating: {}\r\n}\r\n\r\nconst formValues = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_VALUE':\r\n      return {\r\n        ...state,\r\n        formValues: {\r\n          ...state.formValues,\r\n          [action.updateField]: action.updateValue\r\n        }\r\n      }\r\n    case 'RESET_FORM_VALUES':\r\n      return {\r\n        ...state,\r\n        formValues: {}\r\n      }\r\n    case 'SET_STAR_RATING':\r\n      return {\r\n        ...state,\r\n        starRating: {\r\n          ...state.starRating,\r\n          [action.fieldName]: action.rating\r\n        }\r\n      }\r\n    case 'RESET_STAR_RATING':\r\n      return {\r\n        ...state,\r\n        starRating: {}\r\n      }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default formValues;","import { createStore, combineReducers } from 'redux';\r\nimport structure from './reducers/structure';\r\nimport availableForms from './reducers/availableForms';\r\nimport formValues from './reducers/formValues';\r\n\r\nconst reducer = combineReducers({\r\n  formStructure: structure,\r\n  availableForms,\r\n  formValues\r\n});\r\n\r\nexport default createStore(reducer);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTitle = styled.h1`\r\n  font-family: Arial;\r\n  color: #a4a5b2;\r\n\r\n  @media (max-width: 768px) { \r\n    text-align: center;\r\n  }\r\n\r\n  @media (max-width: 425px) { \r\n    margin: 0;\r\n    padding: 0.5em 0 0 0;\r\n  }\r\n`;\r\n\r\nconst FormTitle = (props) => {\r\n  return (\r\n    <StyledTitle>\r\n      {props.title}\r\n    </StyledTitle>\r\n  );\r\n}\r\n\r\nexport default FormTitle;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst StyledLayout = styled(Container)`\r\n  background: white\r\n\r\n  @media (min-width: 576px) { \r\n    margin: auto;\r\n    width: 50%;\r\n    padding: 1em;\r\n    border: 2px solid #DDD;\r\n  }\r\n\r\n  @media (max-width: 425px) { \r\n    height: 100vh\r\n  }\r\n\r\n  @media (min-width: 576px) { \r\n    margin: auto;\r\n    width: 50%;\r\n    padding: 1em;\r\n    border: 2px solid #DDD;\r\n  }\r\n\r\n`;\r\n\r\nconst FormLayout = (props) => (\r\n   <StyledLayout>\r\n     {props.children}\r\n   </StyledLayout>\r\n);\r\n\r\nexport default FormLayout;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\n\r\nconst StyledStar = styled(FontAwesomeIcon)`\r\n  margin-right: 0.5em;\r\n`\r\n\r\nconst Layout = styled.div`\r\n  font-size: 1.0em;\r\n  \r\n  @media (min-width: 1024px) { \r\n    font-size: 1.5em;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    starRating: state.formValues.starRating\r\n  }\r\n};\r\n\r\nclass StarRating extends React.Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.dispatch({type: 'SET_STAR_RATING', fieldName: this.props.name, rating: 0 });\r\n  };\r\n\r\n  handleStarClick = (nextValue, prevValue, name) => {\r\n    this.props.dispatch({type: 'SET_STAR_RATING', fieldName: this.props.name, rating: nextValue});\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.starRating[this.props.name]);\r\n    return (\r\n      <Layout>\r\n        <StarRatingComponent \r\n          name={this.props.name} \r\n          starCount={5}\r\n          value={this.props.starRating[this.props.name]}\r\n          onStarClick={this.handleStarClick.bind(this)}\r\n          renderStarIcon={() => <StyledStar icon=\"star\"/>}\r\n          emptyStarColor={'#9b9da0'}\r\n        />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StarRating);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Form, InputGroup } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport StarRating from './StarRating';\r\n\r\nconst StyledLabel = styled(Form.Label)`\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst labelDefaultSize = 4;\r\nconst fieldDefaultSize = 6; \r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    formValues: state.formValues,\r\n    currentForm: state.availableForms.currentForm\r\n  }\r\n};\r\n\r\nclass FormStructure extends Component {\r\n\r\n  handleChange = (e) => {\r\n    this.props.dispatch({type: 'UPDATE_VALUE', updateField: e.target.name, updateValue: e.target.value});\r\n    console.log(this.props.formValues);\r\n  };\r\n\r\n  createInputField = (field) => {\r\n    switch(field.type){\r\n      case 'datefield':\r\n        return (\r\n            <InputGroup>\r\n              <Form.Control name={field.componentId} type=\"date\" placeholder=\"DD/MM/AAAA\" onChange={e => {this.handleChange(e)}}/>\r\n              <InputGroup.Append>\r\n                <InputGroup.Text id=\"inputGroupPrepend\"><FontAwesomeIcon icon=\"calendar-alt\"></FontAwesomeIcon></InputGroup.Text>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n        );\r\n      case 'ratingfield':\r\n          return (\r\n            <StarRating name={field.componentId} />\r\n          );\r\n      case 'urlfield':\r\n          return (\r\n            <Form.Control name={field.componentId} type=\"url\" onChange={e => {this.handleChange(e)}}/>\r\n          );\r\n      default:\r\n          return(\r\n            <Form.Control name={field.componentId} type=\"text\" onChange={e => {this.handleChange(e)}}/>\r\n          );\r\n    }\r\n  };\r\n\r\n  createHelpBlock = (field) => {\r\n    if (field.helpBlock === null) {\r\n      return\r\n    }\r\n    return (\r\n      <small className='form-text text-muted'>\r\n        {field.helpBlock}\r\n      </small>\r\n    )\r\n  };\r\n\r\n  createFormFields = () => {\r\n    return (\r\n      <Form onSubmit={e => {this.handleSubmit(e)}}>\r\n        {this.props.structure.map(field => {\r\n          return (\r\n            <Form.Group as={Row} controlId={field.componentId} key={field.componentId}>\r\n              <StyledLabel className='text-right' column xs={labelDefaultSize + 1}  column sm={labelDefaultSize}>\r\n                {field.label}\r\n              </StyledLabel>\r\n              <Col xs={fieldDefaultSize}>\r\n                {this.createInputField(field)}\r\n                {this.createHelpBlock(field)}\r\n              </Col>\r\n            </Form.Group>\r\n          );\r\n        })}\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.props.structure.length === 0 || this.props.structure === undefined) return null;\r\n    return (\r\n      this.createFormFields()\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FormStructure);","const request = require('request-promise');\r\n\r\nconst URL = 'https://coletum.com/api/graphql';\r\nconst TOKEN = '7s5txcu909kwc48wookgw8g00occokk';\r\n\r\nconst sendAPIRequest = async (apiPath) => {\r\n  try {\r\n    const response = await request(apiPath, { json: true });\r\n    return response;\r\n  } catch (err) { \r\n    console.log(err);\r\n    return 'error';\r\n  }\r\n};\r\n\r\nconst getDataFromColetum = async (query) => {\r\n  const apiPath = URL + '?query=' + query + '&token=' + TOKEN;\r\n  const response = await sendAPIRequest(apiPath);\r\n  if (response === 'error') return response;\r\n  return response.data;\r\n};\r\n\r\nexport const getAvailableForms = async () => {\r\n  const query = '{form{id,name,status,category,answerTracking,publicAnswers}}';\r\n  const response = await getDataFromColetum(query);\r\n  return response;\r\n};\r\n\r\nexport const getFormStructure = async (formName, formId) => {\r\n  const query = `{form_structure(formId:${formId}){label,componentId,type,helpBlock,order,components}}`;\r\n  const response = await getDataFromColetum(query);\r\n  return response;\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormTitle from './FormTitle';\r\nimport FormLayout from './FormLayout';\r\nimport FormStructure from './FormStructure';\r\nimport { getFormStructure } from '../../api/apiClient';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...state\r\n  }\r\n};\r\n\r\nclass Form extends Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.dispatch({type: 'SET_UPDATE_FLAG', updateFlag: true});\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    if (this.props.formStructure.updateFlag) this.updateStructure();\r\n  };\r\n  \r\n  updateStructure = async () => {\r\n    const form = this.props.availableForms.currentForm;\r\n    const response = await getFormStructure(form.name, form.id);\r\n    if (response === 'error') return;\r\n    this.props.dispatch({type: 'UPDATE', structure: response.form_structure}); \r\n    this.props.dispatch({type: 'SET_UPDATE_FLAG', updateFlag: false});\r\n    this.props.dispatch({type: 'RESET_FORM_VALUES'});\r\n    this.props.dispatch({type: 'RESET_STAR_RATING'});\r\n  }\r\n\r\n  render() {\r\n    if (this.props.formStructure.updateFlag) return null;\r\n    return(\r\n      <FormLayout>\r\n        <FormTitle title={this.props.availableForms.currentForm.name}/>\r\n        <hr/>\r\n        <FormStructure structure={this.props.formStructure.structure}/>\r\n        <hr/>\r\n      </FormLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Form);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { getAvailableForms } from '../api/apiClient';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDropdown = styled(NavDropdown)`\r\n  background-color: #52a096;\r\n\r\n  a {\r\n    color: white\r\n  }\r\n\r\n  .nav-link {\r\n    color: white !important\r\n  }\r\n\r\n  .dropdown-menu {\r\n    background-color: #52a096;\r\n  }\r\n  \r\n`;\r\n\r\nconst StyledNavbar = styled(Navbar)`\r\n  .navbar-toggler {\r\n    background-color: #52a096;\r\n  }\r\n\r\n  @media (max-width: 425px) { \r\n    background: white;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    forms: state.availableForms.forms,\r\n  }\r\n};\r\n\r\nclass Header extends Component {\r\n  componentDidMount = () => {\r\n    this.getForms();\r\n  };\r\n\r\n  handleSelection = (formId) => {\r\n    const form = this.props.forms.filter(f => f.id === formId);\r\n    this.props.dispatch({type: 'SET_CURRENT_FORM', currentForm: form[0]});\r\n    this.props.dispatch({type: 'SET_UPDATE_FLAG', updateFlag: true}); \r\n  };\r\n\r\n  getForms = async () => {\r\n    const response = await getAvailableForms();\r\n    if (response === 'error') return;\r\n    this.props.dispatch({type: 'SET_FORMS', forms: response.form});\r\n  }\r\n\r\n  populateDropdown = () => {\r\n    return(\r\n      <StyledDropdown onSelect={evt => this.handleSelection(evt)} title=\"Formulários Disponíveis\">\r\n      {this.props.forms.map(form => {\r\n        return (\r\n          <NavDropdown.Item key={form.id} eventKey={form.id}>{form.name}</NavDropdown.Item>\r\n        );\r\n      })}\r\n      </StyledDropdown>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return(\r\n    <StyledNavbar variant='dark' expand='sm'>\r\n      <StyledNavbar.Toggle aria-controls='basic-navbar-nav' />\r\n      <StyledNavbar.Collapse>\r\n        <Nav className=\"mr-auto\">\r\n          {this.populateDropdown()}\r\n        </Nav>\r\n      </StyledNavbar.Collapse>\r\n    </StyledNavbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport { createGlobalStyle } from 'styled-components';\nimport Form from './Form/Form';\nimport Header from './Header';\n\nlibrary.add(faCalendarAlt);\nlibrary.add(faStar);\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #575b5e;\n  }\n`\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <GlobalStyle/>\n        <Header/>\n        <Form/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css'; \nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}